{"version":3,"file":"atomico-base-element.js","sources":["../src/index.js"],"sourcesContent":["/**\r\n * Applies JSON.parse to extract the real value of an attribute from a string.\r\n * @param {string} value\r\n * @returns {(boolean|string|number|Object|Array)}\r\n **/\r\nfunction parse(value) {\r\n\treturn JSON.parse(value);\r\n}\r\n\r\nexport default class Element extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/**@type {Object<string,any>} */\r\n\t\tthis.props = {};\r\n\t\t/**@type {Promise} */\r\n\t\tthis.mounted = new Promise(resolve => (this.mount = resolve));\r\n\t\t/**@type {Promise} */\r\n\t\tthis.unmounted = new Promise(resolve => (this.unmount = resolve));\r\n\t}\r\n\tconnectedCallback() {\r\n\t\tthis.mount();\r\n\t}\r\n\tdisconnectedCallback() {\r\n\t\tthis.unmount();\r\n\t}\r\n\tattributeChangedCallback(name, oldValue, value) {\r\n\t\tif (oldValue == value) return;\r\n\t\tthis.setProperty(name, value);\r\n\t}\r\n\tstatic get observedAttributes() {\r\n\t\tlet observables = this.observables || {},\r\n\t\t\tattributes = [],\r\n\t\t\t/**\r\n\t\t\t * @param {string} - add the setter and getter to the constructor prototype\r\n\t\t\t */\r\n\t\t\tproxy = name => {\r\n\t\t\t\tObject.defineProperty(this.prototype, name, {\r\n\t\t\t\t\tset(value) {\r\n\t\t\t\t\t\tthis.setProperty(name, value);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tget() {\r\n\t\t\t\t\t\treturn this.props[name];\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\tfor (let key in observables) {\r\n\t\t\tlet attr = key.replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n\t\t\tattributes.push(attr);\r\n\t\t\tif (!(name in this.prototype)) proxy(key);\r\n\t\t}\r\n\t\treturn attributes;\r\n\t}\r\n\t/**\r\n\t * validate to `value`, and then deliver it to the` update` method.\r\n\t * @param {name} name\r\n\t * @param {*} value\r\n\t */\r\n\tsetProperty(name, value) {\r\n\t\tname = name.replace(/-(\\w)/g, (all, letter) => letter.toUpperCase());\r\n\t\tlet { observables } = this.constructor,\r\n\t\t\terror,\r\n\t\t\ttype = observables[name];\r\n\t\ttry {\r\n\t\t\tif (typeof value == \"string\") {\r\n\t\t\t\tswitch (type) {\r\n\t\t\t\t\tcase Boolean:\r\n\t\t\t\t\t\tvalue = parse(value || \"true\") == true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Number:\r\n\t\t\t\t\t\tvalue = Number(value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase Object:\r\n\t\t\t\t\tcase Array:\r\n\t\t\t\t\t\tvalue = parse(value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\terror = true;\r\n\t\t}\r\n\t\tif (!error && {}.toString.call(value) == `[object ${type.name}]`) {\r\n\t\t\tthis.update({ [name]: value });\r\n\t\t} else {\r\n\t\t\tthrow `the attribute [${name}] must be of the type [${type.name}]`;\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * @param {Object<string,any>} props\r\n\t */\r\n\tupdate(props) {}\r\n}\r\n"],"names":["parse","value","JSON","HTMLElement","[object Object]","super","this","props","mounted","Promise","resolve","mount","unmounted","unmount","name","oldValue","setProperty","observedAttributes","observables","attributes","proxy","Object","defineProperty","prototype","key","attr","replace","toLowerCase","push","all","letter","toUpperCase","error","constructor","type","Boolean","Number","Array","e","toString","call","update"],"mappings":"AAKA,SAASA,EAAMC,GACd,OAAOC,KAAKF,MAAMC,kBAGJ,cAAsBE,YACpCC,cACCC,QAEAC,KAAKC,MAAQ,GAEbD,KAAKE,QAAU,IAAIC,QAAQC,GAAYJ,KAAKK,MAAQD,GAEpDJ,KAAKM,UAAY,IAAIH,QAAQC,GAAYJ,KAAKO,QAAUH,GAEzDN,oBACCE,KAAKK,QAENP,uBACCE,KAAKO,UAENT,yBAAyBU,EAAMC,EAAUd,GACpCc,GAAYd,GAChBK,KAAKU,YAAYF,EAAMb,GAExBgB,gCACC,IAAIC,EAAcZ,KAAKY,aAAe,GACrCC,EAAa,GAIbC,EAAQN,IACPO,OAAOC,eAAehB,KAAKiB,UAAWT,EAAM,CAC3CV,IAAIH,GACHK,KAAKU,YAAYF,EAAMb,IAExBG,MACC,OAAOE,KAAKC,MAAMO,OAItB,IAAK,IAAIU,KAAON,EAAa,CAC5B,IAAIO,EAAOD,EAAIE,QAAQ,WAAY,OAAOC,cAC1CR,EAAWS,KAAKH,GACVX,QAAQR,KAAKiB,WAAYH,EAAMI,GAEtC,OAAOL,EAORf,YAAYU,EAAMb,GACjBa,EAAOA,EAAKY,QAAQ,SAAU,CAACG,EAAKC,IAAWA,EAAOC,eACtD,IACCC,GADGd,YAAEA,GAAgBZ,KAAK2B,YAE1BC,EAAOhB,EAAYJ,GACpB,IACC,GAAoB,iBAATb,EACV,OAAQiC,GACP,KAAKC,QACJlC,EAAkC,GAA1BD,EAAMC,GAAS,QACvB,MACD,KAAKmC,OACJnC,EAAQmC,OAAOnC,GACf,MACD,KAAKoB,OACL,KAAKgB,MACJpC,EAAQD,EAAMC,IAIhB,MAAOqC,GACRN,GAAQ,EAET,GAAKA,GAAS,GAAGO,SAASC,KAAKvC,eAAqBiC,EAAKpB,QAGxD,uBAAwBA,2BAA8BoB,EAAKpB,QAF3DR,KAAKmC,OAAO,CAAErC,CAACU,GAAOb,IAQxBG,OAAOG"}